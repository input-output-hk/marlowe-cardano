cabal-version: 2.2
name: marlowe
version: 0.1.0.1
license: Apache-2.0
license-files:
  LICENSE
  NOTICE
build-type: Simple
maintainer: alexander.nemish@iohk.io
stability: experimental
author: Alexander Nemish
synopsis:
  Marlowe: financial contracts on Cardano Computation Layer
description:
  A reference implementation of Marlowe, domain-specific language targeted at
  the execution of financial contracts in the style of Peyton Jones et al
  on Cardano Computation Layer.
category: Language
extra-doc-files: README.md

source-repository head
  type: git
  location: https://github.com/input-output-hk/plutus

flag defer-plugin-errors
    description:
        Defer errors from the plugin, useful for things like Haddock that can't handle it.
    default: False
    manual: True

common lang
  default-language: Haskell2010
  default-extensions: ExplicitForAll ScopedTypeVariables
                      DeriveGeneric StandaloneDeriving DeriveLift
                      DeriveFunctor DeriveFoldable
                      DeriveTraversable
  ghc-options:
    -Wall -Wnoncanonical-monad-instances
    -Wincomplete-uni-patterns -Wincomplete-record-updates
    -Wredundant-constraints -Widentities

  if flag(defer-plugin-errors)
    ghc-options: -fplugin-opt PlutusTx.Plugin:defer-errors

library
  import: lang
  hs-source-dirs: src
  ghc-options:
    -Wunused-packages

  if !(impl(ghcjs) || os(ghcjs))
    build-depends: plutus-tx-plugin -any

  build-depends:
    aeson <2,
    base16-aeson,
    base -any,
    bytestring,
    cardano-api -any,
    cardano-binary -any,
    cardano-ledger-alonzo -any,
    cardano-ledger-core -any,
    containers -any,
    deriving-aeson -any,
    lens,
    mtl,
    newtype-generics,
    template-haskell -any,
    plutus-ledger-ada,
    plutus-ledger-api -any,
    -- We use plutus-ledger here because because marlowe-cli depens on it
    -- currently and we have collision between orphans.
    plutus-ledger,
    -- plutus-ledger-aeson,
    plutus-ledger-slot,
    plutus-script-utils,
    plutus-tx -any,
    serialise -any,
    base16-bytestring -any,
    text,
    sbv >= 8.4,
    scientific -any,
    wl-pprint -any,

  exposed-modules:
    Language.Marlowe
    Language.Marlowe.Extended.V1
    Language.Marlowe.Core.V1.Semantics
    Language.Marlowe.Core.V1.Semantics.Types
    Language.Marlowe.FindInputs
    Language.Marlowe.Client
    Language.Marlowe.Client.History
    Language.Marlowe.Util
    Language.Marlowe.ParserUtil
    Language.Marlowe.Scripts
    Language.Marlowe.Pretty
    Language.Marlowe.Analysis.FSSemantics
    Plutus.Debug
  other-modules:

test-suite marlowe-test
    import: lang
    hs-source-dirs:
      test
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    other-modules:
        Spec.Marlowe.Arbitrary
        Spec.Marlowe.AutoExecute
        Spec.Marlowe.Common
        Spec.Marlowe.Marlowe
        Spec.Marlowe.Semantics
        Spec.Marlowe.Util
        Spec.Marlowe.Util.AssocMap

    if !(impl(ghcjs) || os(ghcjs))
      build-depends: plutus-tx-plugin -any

    build-depends:
        aeson -any,
        cardano-api -any,
        base >=4.9 && <5,
        containers -any,
        hint -any,
        lens -any,
        bytestring -any,
        freer-simple -any,
        tasty -any,
        tasty-hunit -any,
        tasty-quickcheck,
        text -any,
        serialise,
        cborg,
        plutus-ledger-ada,
        plutus-ledger,
        -- plutus-ledger-aeson,
        plutus-ledger-api -any,
        plutus-ledger-slot,
        marlowe,
        plutus-tx -any,
        QuickCheck,
        template-haskell -any,
        streaming -any,
        async -any,
        prettyprinter -any,
        servant-client -any,
        http-client -any,
        websockets -any,
        network -any,
        openapi3,
        uuid -any

