{{- range $index, $network := .Values.networks }}
---
apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: chain-indexer-{{ $network }}
  namespace: marlowe-staging
  annotations:
    app.oam.dev/publishVersion: {{ $.Chart.AppVersion }}
spec:
  components:
  - name: chain-indexer-{{ $network }}
    type: webservice
    properties:
      cpu: "0.5"
      env:
      - name: NODE_CONFIG
        value: /node-config/network/{{ $network }}/cardano-node/config.json
      - name: DB_NAME
        value: chainsync_{{ $network }}
      - name: DB_USER
        valueFrom:
          secretKeyRef:
            key: username
            name: chainsync-{{ $network }}-owner-user.marlowe-runtime-database.credentials.postgresql.acid.zalan.do
            namespace: marlowe-staging
      - name: DB_PASS
        valueFrom:
          secretKeyRef:
            key: password
            name: chainsync-{{ $network }}-owner-user.marlowe-runtime-database.credentials.postgresql.acid.zalan.do
            namespace: marlowe-staging
      - name: DB_HOST
        value: marlowe-runtime-database.marlowe-staging:5432
      - name: CARDANO_NODE_SOCKET_PATH
        value: /ipc/node.socket
      - name: NODE_CONFIG
        value: /node-config/config.json
      - name: HTTP_PORT
        value: "3781"
      image: {{ $.Values.images.repo }}/{{ $.Values.images.org }}/marlowe-chain-indexer:{{ $.Values.images.tag }}
      imagePullPolicy: Always
      memory: 1024Mi
      volumeMounts:
        emptyDir:
        - name: ipc
          mountPath: /ipc
    traits:
    - type: init-container
      properties:
        name: node-config-cloner
        image: alpine/git
        args:
        - clone
        - --single-branch
        - --
        - https://github.com/input-output-hk/cardano-configurations
        - /node-config
        mountName: node-config
        initMountPath: /node-config
        appMountPath: /node-config
    - type: sidecar
      properties:
        name: socat
        image: alpine/socat
        args:
        - UNIX-LISTEN:/ipc/node.socket,fork
        - TCP-CONNECT:cardano-node-{{ $network }}.vela-system:8090
        volumes:
        - name: ipc
          path: /ipc
  policies:
  - name: local-marlowe-staging
    properties:
      clusters:
      - local
      namespace: marlowe-staging
    type: topology
  workflow:
    mode:
      steps: DAG
    steps:
    - meta:
        alias: Deploy To local-marlowe-staging
      name: local-marlowe-staging
      properties:
        policies:
        - local-marlowe-staging
      type: deploy

{{- end }}
