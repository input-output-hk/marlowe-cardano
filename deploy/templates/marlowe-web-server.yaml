{{- range .Values.networks }}
---
apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: marlowe-web-server-{{ . }}
  namespace: marlowe-staging
  app.oam.dev/publishVersion: {{ $.Chart.AppVersion }}
spec:
  components:
    - name: marlowe-web-server-{{ . }}
      type: webservice
      properties:
        annotations:
          sidecar.optentelemetry.io/inject: "true"
        env:
        - name: PORT
          value: "3780"
        - name: RUNTIME_HOST
          value: marlowe-proxy-{{ . }}.marlowe-staging
        - name: RUNTIME_PORT
          value: "3701"
        cpu: "0.5"
        image: {{ $.Values.images.repo }}/{{ $.Values.images.org }}/marlowe-web-server:{{ $.Values.images.tag }}
        imagePullPolicy: Always
        memory: 1024Mi
        ports:
        - expose: true
          port: 3780
          protocol: TCP
      traits:
      - type: https-route
        properties:
          domains:
          - marlowe-runtime-{{ . }}-web.scdev.aws.iohkdev.io
          rules:
          - port: 3780
      - type: opentelemetry-collector
        properties:
          mode: sidecar
          config: |
            receivers:
              otlp:
                protocols:
                  http:
                  grpc:
            processors:

            exporters:
              logging:

            service:
              pipelines:
                traces:
                  receivers: [otlp]
                  processors: []
                  exporters: [logging]

  policies:
  - name: local-marlowe-staging
    properties:
      clusters:
      - local
      namespace: marlowe-staging
    type: topology

  workflow:
    mode:
      steps: DAG
    steps:
    - meta:
        alias: Deploy To local-marlowe-staging
      name: local-marlowe-staging
      properties:
        policies:
        - local-marlowe-staging
      type: deploy
{{- end }}
