{{- range $instanceName, $instance := .Values.instances }}
{{- range $.Values.networks }}
---
apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: marlowe-indexer-{{ . }}-{{ $instanceName }}
  namespace: {{ $.Values.namespace }}
  annotations:
    meta.helm.sh/release-name: {{ $.Values.releaseName }}
    meta.helm.sh/release-namespace: {{ $.Values.namespace }}
spec:
  components:
  - name: marlowe-indexer-{{ . }}-{{ $instanceName }}
    type: webservice
    properties:
      env:
      - name: MARLOWE_CHAIN_SYNC_HOST
        value: chain-sync-{{ . }}-{{ $instanceName }}.{{ $.Values.namespace }}
      - name: MARLOWE_CHAIN_SYNC_PORT
        value: "3715"
      - name: MARLOWE_CHAIN_SYNC_QUERY_PORT
        value: "3716"
      - name: MARLOWE_CHAIN_SYNC_COMMAND_PORT
        value: "3720"
      - name: HTTP_PORT
        value: "3783"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: {{ $.Values.otelExporter.url }}:{{ $.Values.otelExporter.port }}
      - name: OTEL_SERVICE_NAME
        value: marlowe-indexer-{{ . }}-{{ $instanceName }}
      cpu: "0.5"
      image: {{ $instance.repo }}/{{ $instance.org }}/marlowe-indexer:{{ $instance.tag }}
      imagePullPolicy: Always
      memory: 4096Mi
      ports:
      - expose: true
        port: 3783
        protocol: TCP
    traits:
    - type: postgres-instance
      properties:
        allocateDatabase:
          storage: 400
          instanceClass: db.t3.medium
        name: marlowe-runtime-{{ $instanceName }}-{{ . }}-marlowe
  policies:
  - name: local-{{ $.Values.namespace }}
    properties:
      clusters:
      - local
      namespace: {{ $.Values.namespace }}
    type: topology

  workflow:
    mode:
      steps: DAG
    steps:
    - meta:
        alias: Deploy To local-{{ $.Values.namespace }}
      name: local-{{ $.Values.namespace }}
      properties:
        policies:
        - local-{{ $.Values.namespace }}
      type: deploy

{{- end }}
{{- end }}
