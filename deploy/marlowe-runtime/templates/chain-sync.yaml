{{- range $instanceName, $instance := .Values.instances }}
{{- range $index, $network := $.Values.networks }}
---
apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: chain-sync-{{ $network }}-{{ $instanceName }}
  namespace: {{ $.Values.namespace }}
  annotations:
    meta.helm.sh/release-name: {{ $.Values.releaseName }}
    meta.helm.sh/release-namespace: {{ $.Values.namespace }}
spec:
  components:
  - name: chain-sync-{{ $network }}-{{ $instanceName }}
    type: webservice
    properties:
      env:
      - name: HOST
        value: 0.0.0.0
      - name: PORT
        value: "3715"
      - name: QUERY_PORT
        value: "3716"
      - name: JOB_PORT
        value: "3720"
      - name: HTTP_PORT
        value: "3782"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: {{ $.Values.otelExporter.url }}:{{ $.Values.otelExporter.port }}
      - name: OTEL_SERVICE_NAME
        value: marlowe-chain-sync-{{ $network }}-{{ $instanceName }}
      - name: CARDANO_NODE_SOCKET_PATH
        value: /ipc/node.socket
      - name: NODE_CONFIG
        value: /node-config/network/{{ $network }}/cardano-node/config.json
      cpu: "1"
      image: {{ $instance.repo }}/{{ $instance.org }}/marlowe-chain-sync:{{ $instance.tag }}
      imagePullPolicy: Always
      memory: 4096Mi
      ports:
      - expose: true
        port: 3715
        protocol: TCP
      - expose: true
        port: 3716
        protocol: TCP
      - expose: true
        port: 3720
        protocol: TCP
      - expose: true
        port: 3782
        protocol: TCP
      volumeMounts:
        emptyDir:
        - name: ipc
          mountPath: /ipc
    traits:
    - type: postgres-instance
      properties:
        name: marlowe-runtime-{{ $instanceName }}-{{ $network }}-chain
    - type: init-container
      properties:
        name: node-config-cloner
        image: alpine/git
        args:
        - clone
        - --single-branch
        - --
        - https://github.com/input-output-hk/cardano-configurations
        - /node-config
        mountName: node-config
        initMountPath: /node-config
        appMountPath: /node-config
    - type: sidecar
      properties:
        name: socat
        image: alpine/socat
        args:
        - UNIX-LISTEN:/ipc/node.socket,fork
        - TCP-CONNECT:{{ $instance.cardanoNode }}-{{ $network }}.vela-system:8090
        volumes:
        - name: ipc
          path: /ipc

  policies:
  - name: local-{{ $.Values.namespace }}
    properties:
      clusters:
      - local
      namespace: {{ $.Values.namespace }}
    type: topology

  workflow:
    mode:
      steps: DAG
    steps:
    - meta:
        alias: Deploy To local-{{ $.Values.namespace }}
      name: local-{{ $.Values.namespace }}
      properties:
        policies:
        - local-{{ $.Values.namespace }}
      type: deploy

{{- end }}
{{- end }}
