{{- range $instanceName, $instance := .Values.instances }}
{{- range $.Values.networks }}
---
apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: marlowe-contract-{{ . }}-{{ $instanceName }}
  namespace: {{ $.Values.namespace }}
  annotations:
    meta.helm.sh/release-name: {{ $.Values.releaseName }}
    meta.helm.sh/release-namespace: {{ $.Values.namespace }}
spec:
  components:
    - name: marlowe-contract-{{ . }}-{{ $instanceName }}
      type: webservice
      properties:
        env:
        - name: HOST
          value: 0.0.0.0
        - name: PORT
          value: "3727"
        - name: QUERY_PORT
          value: "3728"
        - name: TRANSFER_PORT
          value: "3729"
        - name: MARLOWE_CHAIN_SYNC_HOST
          value: chain-sync-{{ . }}-{{ $instanceName }}.{{ $.Values.namespace }}
        - name: MARLOWE_CHAIN_SYNC_QUERY_PORT
          value: "3716"
        - name: SYNC_HOST
          value: marlowe-sync-{{ . }}-{{ $instanceName }}.{{ $.Values.namespace }}
        - name: MARLOWE_BULK_SYNC_PORT
          value: "3730"
        - name: STORE_DIR
          value: /store
        - name: MAX_STORE_SIZE
          value: "214748364800" # 200 GB
        - name: MIN_CONTRACT_AGE
          value: "1800s" # 30 minutes
        - name: HTTP_PORT
          value: "3787"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://grafana-agent.grafana-agent:4318
        - name: OTEL_SERVICE_NAME
          value: marlowe-contract-{{ . }}-{{ $instanceName }}
        cpu: "0.5"
        image: {{ $instance.repo }}/{{ $instance.org }}/marlowe-contract:{{ $instance.tag }}
        imagePullPolicy: Always
        memory: 4096Mi
        ports:
        - expose: true
          port: 3727
          protocol: TCP
        - expose: true
          port: 3728
          protocol: TCP
        - expose: true
          port: 3787
          protocol: TCP
      traits:
      - type: storage
        properties:
          pvc:
          - name: store-dir-{{ . }}-{{ $instanceName }}
            mountPath: /store
            storageClassName: ebs-sc
            resources:
              requests:
                storage: 200Gi
  policies:
  - name: local-{{ $.Values.namespace }}
    properties:
      clusters:
      - local
      namespace: {{ $.Values.namespace }}
    type: topology

  workflow:
    mode:
      steps: DAG
    steps:
    - meta:
        alias: Deploy To local-{{ $.Values.namespace }}
      name: local-{{ $.Values.namespace }}
      properties:
        policies:
        - local-{{ $.Values.namespace }}
      type: deploy
{{- end }}
{{- end }}
