Show: MsgCancel
Binary: 08
Show: MsgDone
Binary: 03
Show: MsgIntersectFound (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}) (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 09000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001
Show: MsgIntersectFound (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}) (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "61", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0900000000000000010000000000000000000000000000000100000000000000010000000000000001610000000000000001
Show: MsgIntersectFound (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "61", blockNo = BlockNo {unBlockNo = 1}}) (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0900000000000000010000000000000001610000000000000001000000000000000100000000000000000000000000000001
Show: MsgIntersectNotFound (At (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}))
Binary: 0a01000000000000000100000000000000000000000000000001
Show: MsgIntersectNotFound (At (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "61", blockNo = BlockNo {unBlockNo = 1}}))
Binary: 0a0100000000000000010000000000000001610000000000000001
Show: MsgIntersectNotFound Genesis
Binary: 0a00
Show: MsgPoll
Binary: 07
Show: MsgRequestNext 1
Binary: 0101
Show: MsgRollBackward (At (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})) Genesis
Binary: 050100000000000000010000000000000000000000000000000100
Show: MsgRollBackward (At (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "61", blockNo = BlockNo {unBlockNo = 1}})) Genesis
Binary: 05010000000000000001000000000000000161000000000000000100
Show: MsgRollBackward Genesis (At (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}))
Binary: 050001000000000000000100000000000000000000000000000001
Show: MsgRollBackward Genesis (At (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "61", blockNo = BlockNo {unBlockNo = 1}}))
Binary: 05000100000000000000010000000000000001610000000000000001
Show: MsgRollBackward Genesis Genesis
Binary: 050000
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList [(AssetId {policyId = "", tokenName = ""},Quantity {unQuantity = 1})]}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList [(AssetId {policyId = "", tokenName = "a"},Quantity {unQuantity = 1})]}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList [(AssetId {policyId = "61", tokenName = ""},Quantity {unQuantity = 1})]}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = 61}, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr1vy5ecqvg\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1qpsst6vycv\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1qqjwq357\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1vpssccjchz\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1vqylkdml\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1vqylkdml\"",Token "" "a"),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000100000000000000000000000000020000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000016103000000000101000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1vqylkdml\"",Token "61" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1wpssnqh9pc\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000100000000000000000000000000020000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000010000000000000001040000000000000001610000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000101000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1wq6vgsdn\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000001000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000100000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000101000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1ypssarxha3\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000010000000000000000000000000002000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000001000000000000000104000000000000000161000000000000000000000000000204000000000000000004000000000000000003000000000101000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1yq8p4z3x\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("a",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr1vy5ecqvg\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1qpsst6vycv\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1qqjwq357\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000000000000000000000104000000000000000003000000000101000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1vpssccjchz\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1vqylkdml\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1wpssnqh9pc\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000001000000000000000104000000000000000161000000000001000000000000000003000000000101000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1wq6vgsdn\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1ypssarxha3\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1yq8p4z3x\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "a",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "a" "\"addr_test1vqylkdml\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = [("",1)]}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = [("a",1)]}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (AndObs FalseObs FalseObs) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000050000000000000002000000000000000000000000000200000000000a000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "a")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (NotObs FalseObs) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000050000000000000002000000000002000000000000000100000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (OrObs FalseObs FalseObs) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000050000000000000002000000000001000000000000000200000000000a000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ValueEQ TimeIntervalStart TimeIntervalStart) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ValueGE TimeIntervalStart TimeIntervalStart) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ValueGT TimeIntervalStart TimeIntervalStart) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ValueLE TimeIntervalStart TimeIntervalStart) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ValueLT TimeIntervalStart TimeIntervalStart) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000005000000000000000200000000000600000000000000020000000000080000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert FalseObs Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000005000000000000000200000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert TrueObs Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataBytes ""))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c010000000000000002020000000002010000000000000001010000000000000002040000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataBytes "a"))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c01000000000000000202000000000201000000000000000101000000000000000204000000000000000003000000000000000161000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataList [MetadataMap []]))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c010000000000000002020000000002010000000000000001010000000000000002040000000000000000010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataList []))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c010000000000000002020000000002010000000000000001010000000000000002040000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataMap [(MetadataMap [],MetadataMap [])]))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c010000000000000002020000000002010000000000000001010000000000000002040000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataMap []))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c010000000000000002020000000002010000000000000001010000000000000002040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataNumber 1))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c010000000000000002020000000002010000000000000001010000000000000002040000000000000000020000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataText ""))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c010000000000000002020000000002010000000000000001010000000000000002040000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataText "a"))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c01000000000000000202000000000201000000000000000101000000000000000204000000000000000004000000000000000161000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Nothing)], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c010000000000000002020000000002010000000000000001010000000000000001040000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("a",Nothing)], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c01000000000000000202000000000201000000000000000101000000000000000104000000000000000161000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [], continuations = Just ""}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c010000000000000003020000000002010000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [], continuations = Just "a"}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c01000000000000000302000000000201000000000000000004000000000000000161000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000001000000000000061c010000000000000002020000000002010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataBytes "")]}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataBytes "a")]}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataList [MetadataMap []])]}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataList [])]}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataMap [(MetadataMap [],MetadataMap [])])]}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataMap [])]}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000000000000000000000000000000000000010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataNumber 1)]}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataText "")]}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataText "a")]}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = "61"})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (AndObs FalseObs FalseObs) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000000000000000000000200000000000a000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\"")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\"")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\"")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000200000000000000030000000000030000000000000001000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000100000000000000010400000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "a")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (NotObs FalseObs) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000002000000000000000100000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (OrObs FalseObs FalseObs) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000001000000000000000200000000000a000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ValueEQ TimeIntervalStart TimeIntervalStart) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ValueGE TimeIntervalStart TimeIntervalStart) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ValueGT TimeIntervalStart TimeIntervalStart) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ValueLE TimeIntervalStart TimeIntervalStart) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ValueLT TimeIntervalStart TimeIntervalStart) Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000006000000000000000200000000000800000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If FalseObs Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000002000000000000000300000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If TrueObs Close Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AddValue (Constant 1) (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "a" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000040000000000000003000000000000000000000000000104000000000000000000000000000700000000000000010000000000000000000000000002040000000000000000000000000001000000000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "a")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (Cond FalseObs (Constant 1) (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000040000000000000003000000000000000000000000000104000000000000000000000000000b000000000000000300000000000a00000000000000000000000000010000000000000001030000000001000000000001000000000000000103000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (Constant 1) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (DivValue (Constant 1) (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (MulValue (Constant 1) (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (NegValue (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (SubValue (Constant 1) (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (UseValue "") Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000040000000000000003000000000000000000000000000104000000000000000000000000000a0000000000000001000000000000000000000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (UseValue "a") Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000040000000000000003000000000000000000000000000104000000000000000000000000000a000000000000000100000000000000000000000000010400000000000000016100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" TimeIntervalEnd Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" TimeIntervalStart Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "a" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr1vy5ecqvg\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1qpsst6vycv\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1qqjwq357\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vpssccjchz\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr1vy5ecqvg\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1qpsst6vycv\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1qqjwq357\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vpssccjchz\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AddValue (Constant 1) (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000001000000000000000500000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000300000000000000020000000000010000000000000001030000000001000000000001000000000000000103000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000001000000000000000500000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000020000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000000000000000000000100000000000000000000000000010000000000010000000000000001040000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "a" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "a")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (Cond FalseObs (Constant 1) (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binaryb000000000000000300000000000a00000000000000000000000000010000000000000001030000000001000000000001000000000000000103000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (Constant 1) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (DivValue (Constant 1) (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (MulValue (Constant 1) (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (NegValue (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (SubValue (Constant 1) (Constant 1)) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (UseValue "") Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000001000000000000000500000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000a0000000000000001000000000000000000000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (UseValue "a") Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000001000000000000000500000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000a000000000000000100000000000000000000000000010400000000000000016100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") TimeIntervalEnd Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") TimeIntervalStart Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "a") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "61" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1wpssnqh9pc\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1wq6vgsdn\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1ypssarxha3\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1yq8p4z3x\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "a") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr1vy5ecqvg\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1qpsst6vycv\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1qqjwq357\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1vpssccjchz\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1wpssnqh9pc\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1wq6vgsdn\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1ypssarxha3\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1yq8p4z3x\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "a") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1wpssnqh9pc\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1wq6vgsdn\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1ypssarxha3\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1yq8p4z3x\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "a" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr1vy5ecqvg\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1qpsst6vycv\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1qqjwq357\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1vpssccjchz\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") [Bound 1 1]) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000000000000000000000200000000000100000000000000020000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000200000000000000010000000000000000000000000002030000000001030000000001000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1wpssnqh9pc\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1wq6vgsdn\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1ypssarxha3\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1yq8p4z3x\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "a") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "a" "\"addr_test1vqylkdml\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr1vy5ecqvg\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1qpsst6vycv\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000000000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000000000000000000000100000000000000000000000000010000000000000000000000000001040000000000000001610000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000000000000000000002000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1qqjwq357\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vpssccjchz\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000016100000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000000000000000000002000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr1vy5ecqvg\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qpsst6vycv\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qqjwq357\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vpssccjchz\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000161000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000000000000000000002000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AddValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000000000000000000010400000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000016100000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a"))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "a" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000007000000000000000100000000000000000000000000020400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000010000000000000001040000000000000001610000000000010000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000000000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000700000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000001000000000000000104000000000000000161000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "a"))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Cond FalseObs (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binaryb000000000000000300000000000a000000000000000000000000000100000000000000010300000000010000000000010000000000000001030000000001000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Constant 1)) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (DivValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (MulValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (NegValue (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (SubValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "")) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binarya00000000000000010000000000000000000000000001040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "a")) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binarya0000000000000001000000000000000000000000000104000000000000000161000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalEnd) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalStart) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "a") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "61" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wpssnqh9pc\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000001000000000000000104000000000000000161000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000000000000000000002000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wq6vgsdn\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1ypssarxha3\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1yq8p4z3x\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "a" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1wpssnqh9pc\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000100000000000000010400000000000000016100000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000000000000000000002000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1wq6vgsdn\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1ypssarxha3\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1yq8p4z3x\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "a" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (AndObs FalseObs FalseObs)) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000000000000000000020000000000020000000000000001000000000000000000000000000200000000000a000000000000000000000000000a0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "a"))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (NotObs FalseObs)) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000000000000000000020000000000020000000000000001000000000002000000000000000100000000000a0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (OrObs FalseObs FalseObs)) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000000000000000000020000000000020000000000000001000000000001000000000000000200000000000a000000000000000000000000000a0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ValueEQ TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ValueGE TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ValueGT TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ValueLE TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000000000000000000020000000000020000000000000001000000000007000000000000000200000000000800000000000000000000000000080000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ValueLT TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify FalseObs) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000002000000000000000100000000000a0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify TrueObs) Close] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr1vy5ecqvg\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1qpsst6vycv\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1qqjwq357\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1vpssccjchz\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") [Bound 1 1]) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000010000000000000002000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000020000000000000001000000000000000000000000000203000000000103000000000104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1wpssnqh9pc\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1wq6vgsdn\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1ypssarxha3\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1yq8p4z3x\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "a") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "a" "\"addr_test1vqylkdml\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr1vy5ecqvg\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1qpsst6vycv\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1qqjwq357\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vpssccjchz\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr1vy5ecqvg\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qpsst6vycv\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qqjwq357\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000001000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000000000000000000010400000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vpssccjchz\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AddValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) "a"] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a"))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000010000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000100000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000000000000000000002000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000001000000000000000104000000000000000161000000000000000000000000000204000000000000000004000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "a" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000001000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000700000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000001000000000000000104000000000000000161000000000001000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000070000000000000001000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000100000000000000010400000000000000016104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000001000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000700000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000001000000000000000104000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "a"))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Cond FalseObs (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binaryb000000000000000300000000000a00000000000000000000000000010000000000000001030000000001000000000001000000000000000103000000000104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Constant 1)) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (DivValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (MulValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (NegValue (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (SubValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "")) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binarya0000000000000001000000000000000000000000000104000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "a")) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binarya000000000000000100000000000000000000000000010400000000000000016104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalEnd) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalStart) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "a") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "61" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wpssnqh9pc\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wq6vgsdn\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1ypssarxha3\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1yq8p4z3x\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "a" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1wpssnqh9pc\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1wq6vgsdn\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1ypssarxha3\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1yq8p4z3x\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "a" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (AndObs FalseObs FalseObs)) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000020000000000000001000000000000000000000000000200000000000a000000000000000000000000000a000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "a"))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (NotObs FalseObs)) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000020000000000000001000000000002000000000000000100000000000a000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (OrObs FalseObs FalseObs)) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000020000000000000001000000000001000000000000000200000000000a000000000000000000000000000a000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ValueEQ TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ValueGE TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ValueGT TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000010000000000000002000000000002000000000000000100000000000500000000000000020000000000080000000000000000000000000008000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ValueLE TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ValueLT TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify FalseObs) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000000000000000000010001000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000010000000000000002000000000002000000000000000100000000000a000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify TrueObs) ""] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000100010000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000020000000000000001000000000009000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [] (POSIXTime {getPOSIXTime = 1}) Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "61", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList [(TxIx {unTxIx = 1},CreateStep {createOutput = TransactionScriptOutput {address = "61", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, payoutValidatorHash = ""})]}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000100000000000000000000000000000001000100000001000000000000000161000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "", newContracts = fromList []}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [MarloweCreateTransaction {txId = "61", newContracts = fromList []}], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000001000000000000000161000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataBytes ""))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c01000000000000000202000000000201000000000000000101000000000000000204000000000000000003000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataBytes "a"))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c0100000000000000020200000000020100000000000000010100000000000000020400000000000000000300000000000000016100000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataList [MetadataMap []]))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c01000000000000000202000000000201000000000000000101000000000000000204000000000000000001000000000000000100000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataList []))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c01000000000000000202000000000201000000000000000101000000000000000204000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataMap [(MetadataMap [],MetadataMap [])]))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c01000000000000000202000000000201000000000000000101000000000000000204000000000000000000000000000000000100000000000000000000000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataMap []))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c01000000000000000202000000000201000000000000000101000000000000000204000000000000000000000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataNumber 1))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c01000000000000000202000000000201000000000000000101000000000000000204000000000000000002000000000100000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataText ""))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c01000000000000000202000000000201000000000000000101000000000000000204000000000000000004000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Just (MetadataText "a"))], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c0100000000000000020200000000020100000000000000010100000000000000020400000000000000000400000000000000016100000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("",Nothing)], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c01000000000000000202000000000201000000000000000101000000000000000104000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [("a",Nothing)], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c0100000000000000020200000000020100000000000000010100000000000000010400000000000000016100000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [], continuations = Just ""}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c01000000000000000302000000000201000000000000000004000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [], continuations = Just "a"}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c0100000000000000030200000000020100000000000000000400000000000000016100000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Just (MarloweMetadata {tags = fromList [], continuations = Nothing}), transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000061c01000000000000000202000000000201000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataBytes "")]}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000103000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataBytes "a")]}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000100000000000000010300000000000000016100000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataList [MetadataMap []])]}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000101000000000000000100000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataList [])]}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000101000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataMap [(MetadataMap [],MetadataMap [])])]}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000100000000000000000100000000000000000000000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataMap [])]}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000100000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataNumber 1)]}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000102000000000100000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataText "")]}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000001000000010000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000104000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList [(1,MetadataText "a")]}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000100000000000000010400000000000000016100000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000100000000000000020000000000000000000000000002040000000000000000000000000001000000000000000104000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "" "\"addr1vy5ecqvg\"") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000001000000000000000200000000000000000000000000020400000000000000000000000000000000000000000002000000000001000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "" "\"addr_test1qpsst6vycv\"") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000010000000000000002000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000000000000000000010400000000000000016103000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "" "\"addr_test1qqjwq357\"") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000100000000000000020000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000000000000000000000104000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "" "\"addr_test1vpssccjchz\"") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000100000000000000020000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000161000000000001000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "" "\"addr_test1vqylkdml\"") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000001000000000000000200000000000000000000000000020400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "" "\"addr_test1wpssnqh9pc\"") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000100000000000000020000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000001000000000000000104000000000000000161000000000001000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "" "\"addr_test1wq6vgsdn\"") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000001000000000000000200000000000000000000000000020400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000010000000000000001040000000000000000000000000001000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "" "\"addr_test1ypssarxha3\"") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000010000000000000002000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000100000000000000010400000000000000016103000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "" "\"addr_test1yq8p4z3x\"") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000100000000000000020000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000001000000000000000104000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "" "a") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000010000000000000002000000000000000000000000000204000000000000000000000000000100000000000000010400000000000000016103000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IChoice (ChoiceId "a" "\"addr_test1vqylkdml\"") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000100000000000000020000000000000000000000000002040000000000000001610000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000001000000000000000104000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr1vy5ecqvg\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1qpsst6vycv\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1qqjwq357\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vpssccjchz\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000010000000000000001040000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr1vy5ecqvg\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1qpsst6vycv\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1qqjwq357\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000000000000000000000100000000000000000000000000010000000000000000000000000001040000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vpssccjchz\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (AndObs FalseObs FalseObs) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000005000000000000000200000000000300000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000001000000000000000104000000000000000161000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000500000000000000020000000000030000000000000001000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000100000000000000010400000000000000016100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "" "a")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (NotObs FalseObs) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000050000000000000002000000000002000000000000000100000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (OrObs FalseObs FalseObs) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ValueEQ TimeIntervalStart TimeIntervalStart) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ValueGE TimeIntervalStart TimeIntervalStart) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ValueGT TimeIntervalStart TimeIntervalStart) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ValueLE TimeIntervalStart TimeIntervalStart) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert (ValueLT TimeIntervalStart TimeIntervalStart) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert FalseObs Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Assert TrueObs Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (AndObs FalseObs FalseObs) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "" "")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\"")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\"")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\"")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "" "a")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000002000000000000000300000000000300000000000000010000000000000000000000000002040000000000000000000000000001000000000000000104000000000000000161000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000020000000000000003000000000003000000000000000100000000000000000000000000020400000000000000016100000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (NotObs FalseObs) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000020000000000000003000000000002000000000000000100000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (OrObs FalseObs FalseObs) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ValueEQ TimeIntervalStart TimeIntervalStart) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ValueGE TimeIntervalStart TimeIntervalStart) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ValueGT TimeIntervalStart TimeIntervalStart) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ValueLE TimeIntervalStart TimeIntervalStart) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If (ValueLT TimeIntervalStart TimeIntervalStart) Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If FalseObs Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000002000000000000000300000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (If TrueObs Close Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AddValue (Constant 1) (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000400000000000000030000000000000000000000000001040000000000000000000000000000000000000000000200000000000000000000000000020000000000010000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (AvailableMoney "a" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000040000000000000003000000000000000000000000000104000000000000000000000000000700000000000000010000000000000000000000000002040000000000000000000000000001000000000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "" "a")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (Cond FalseObs (Constant 1) (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4eb000000000000000300000000000a00000000000000000000000000010000000000000001030000000001000000000001000000000000000103000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (Constant 1) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000400000000000000030000000000000000000000000001040000000000000000000000000001000000000000000103000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (DivValue (Constant 1) (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (MulValue (Constant 1) (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (NegValue (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (SubValue (Constant 1) (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (UseValue "") Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea0000000000000001000000000000000000000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" (UseValue "a") Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000100000000000000000000000000010400000000000000016100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" TimeIntervalEnd Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000400000000000000030000000000000000000000000001040000000000000000000000000009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "" TimeIntervalStart Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Let "a" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000001000000000000000500000000000100000000000000010400000000000000000000000000000000000000000001000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr1vy5ecqvg\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1qpsst6vycv\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000100000000000000050000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000000000000000000000100000000000000000000000000010000000000000000000000000001040000000000000001610000000000000000000000000001000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1qqjwq357\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vpssccjchz\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000001000000000000000500000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000100000000000100000000000000010400000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr1vy5ecqvg\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1qpsst6vycv\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1qqjwq357\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vpssccjchz\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AddValue (Constant 1) (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000001000000000000000500000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000300000000000000020000000000010000000000000001030000000001000000000001000000000000000103000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000001000000000000000500000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000020000000000010000000000000001040000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "a" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000001000000000000000500000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000700000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000001000000000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "a")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (Cond FalseObs (Constant 1) (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4eb000000000000000300000000000a00000000000000000000000000010000000000000001030000000001000000000001000000000000000103000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (Constant 1) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (DivValue (Constant 1) (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (MulValue (Constant 1) (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (NegValue (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (SubValue (Constant 1) (Constant 1)) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (UseValue "") Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea0000000000000001000000000000000000000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (UseValue "a") Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000100000000000000000000000000010400000000000000016100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") TimeIntervalEnd Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") TimeIntervalStart Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "a") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "61" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1wpssnqh9pc\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1wq6vgsdn\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1ypssarxha3\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1yq8p4z3x\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Account "a") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Party "") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000001000000000000000500000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000001000000000000000100000000000100000000000000010400000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Party "\"addr1vy5ecqvg\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1qpsst6vycv\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1qqjwq357\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1vpssccjchz\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1wpssnqh9pc\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1wq6vgsdn\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000010000000000000005000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000010000000000000001000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000001000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1ypssarxha3\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1yq8p4z3x\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000001000000000000000500000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000001000000000000000100000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000100000000000000010400000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1vqylkdml\"" (Party "a") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1wpssnqh9pc\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1wq6vgsdn\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1ypssarxha3\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "\"addr_test1yq8p4z3x\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (Pay "a" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000300000000000000030200000000000000010000000000000000000000000002000000000001000000000000000200000000000000000000000000020400000000000000000000000000010000000000000001040000000000000000020000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "\"addr1vy5ecqvg\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "\"addr_test1qpsst6vycv\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "\"addr_test1qqjwq357\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "\"addr_test1vpssccjchz\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") [Bound 1 1]) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "\"addr_test1wpssnqh9pc\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "\"addr_test1wq6vgsdn\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "\"addr_test1ypssarxha3\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "\"addr_test1yq8p4z3x\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "" "a") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Choice (ChoiceId "a" "\"addr_test1vqylkdml\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr1vy5ecqvg\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000003000000000000000302000000000000000100000000000000000000000000020000000000000000000000000004000000000000000000000000000200000000000100000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000000000000000000002000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1qpsst6vycv\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1qqjwq357\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vpssccjchz\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr1vy5ecqvg\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qpsst6vycv\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qqjwq357\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vpssccjchz\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AddValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a"))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "a" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "a"))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Cond FalseObs (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4eb000000000000000300000000000a000000000000000000000000000100000000000000010300000000010000000000010000000000000001030000000001000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Constant 1)) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (DivValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (MulValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (NegValue (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (SubValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "")) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea00000000000000010000000000000000000000000001040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "a")) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea0000000000000001000000000000000000000000000104000000000000000161000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalEnd) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalStart) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "a") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "61" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000300000000000000030200000000000000010000000000000000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000001610400000000000000000000000000000000000000000002000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wpssnqh9pc\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wq6vgsdn\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1ypssarxha3\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1yq8p4z3x\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1vqylkdml\"" "a" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1wpssnqh9pc\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1wq6vgsdn\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1ypssarxha3\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "\"addr_test1yq8p4z3x\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Deposit "a" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000030000000000000003020000000000000001000000000000000000000000000200000000000000000000000000040000000000010000000000000001040000000000000001610000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000000000000000000002000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (AndObs FalseObs FalseObs)) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000000000000000a0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000030000000000000003020000000000000001000000000000000000000000000200000000000200000000000000010000000000030000000000000001000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000100000000000000010400000000000000000000000000010000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "" "a"))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (NotObs FalseObs)) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (OrObs FalseObs FalseObs)) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000000000000000a0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ValueEQ TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ValueGE TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ValueGT TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ValueLE TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify (ValueLT TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify FalseObs) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [Case (Notify TrueObs) Close] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000030000000000000003020000000000000001000000000001000000000000000200000000000100000000000000020000000000000000000000000002040000000000000000000000000001000000000000000104000000000000000002000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "\"addr1vy5ecqvg\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1qpsst6vycv\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1qqjwq357\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1vpssccjchz\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") [Bound 1 1]) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1wpssnqh9pc\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1wq6vgsdn\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1ypssarxha3\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1yq8p4z3x\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "" "a") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Choice (ChoiceId "a" "\"addr_test1vqylkdml\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr1vy5ecqvg\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1qpsst6vycv\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1qqjwq357\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vpssccjchz\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000030000000000000003020000000000000001000000000001000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000100000000000000010400000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr1vy5ecqvg\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000300000000000000030200000000000000010000000000010000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000100000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qpsst6vycv\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qqjwq357\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vpssccjchz\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AddValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) "a"] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a"))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "a" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "a"))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Cond FalseObs (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000030000000000000003020000000000000001000000000001000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000b000000000000000300000000000a00000000000000000000000000010000000000000001030000000001000000000001000000000000000103000000000104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Constant 1)) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (DivValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (MulValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000030000000000000003020000000000000001000000000001000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000500000000000000020000000000010000000000000001030000000001000000000001000000000000000103000000000104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (NegValue (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (SubValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "")) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea0000000000000001000000000000000000000000000104000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "a")) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000100000000000000000000000000010400000000000000016104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalEnd) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000001000000000000000300000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000300000000000000030200000000000000010000000000010000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000009000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalStart) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "a") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "61" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wpssnqh9pc\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wq6vgsdn\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1ypssarxha3\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1yq8p4z3x\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "a" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1wpssnqh9pc\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1wq6vgsdn\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1ypssarxha3\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "\"addr_test1yq8p4z3x\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Deposit "a" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (AndObs FalseObs FalseObs)) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000000000000000a000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000003000000000000000302000000000000000100000000000100000000000000020000000000020000000000000001000000000003000000000000000100000000000000000000000000020400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010400000000000000000000000000030000000000000003020000000000000001000000000001000000000000000200000000000200000000000000010000000000030000000000000001000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000100000000000000010400000000000000016104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "a"))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (NotObs FalseObs)) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (OrObs FalseObs FalseObs)) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000030000000001040000000000000000000000000003000000000000000302000000000000000100000000000100000000000000020000000000020000000000000001000000000001000000000000000200000000000a000000000000000000000000000a000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ValueEQ TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ValueGE TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ValueGT TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ValueLE TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify (ValueLT TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify FalseObs) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [MerkleizedCase (Notify TrueObs) ""] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" (When [] (POSIXTime {getPOSIXTime = 1}) Close)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "a" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "a") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "61" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000100000000000000030000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000016104000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1wpssnqh9pc\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1wq6vgsdn\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1ypssarxha3\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1yq8p4z3x\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1vqylkdml\"" "a" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000001000000000000000104000000000000000161000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1wpssnqh9pc\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1wq6vgsdn\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1ypssarxha3\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "\"addr_test1yq8p4z3x\"" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput (IDeposit "a" "\"addr_test1vqylkdml\"" (Token "" "") 1) "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000000000000000000000400000000000100000000000000010400000000000000016100000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [MerkleizedInput INotify "" Close], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000010000000000000003000000000002000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000000000000000000010000000000010000000000000002000000000000000000000000000204000000000000000000000000000100000000000000010400000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "" "\"addr1vy5ecqvg\"") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000000000000000000000100000000000100000000000000020000000000000000000000000002040000000000000000000000000000000000000000000200000000000100000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "" "\"addr_test1qpsst6vycv\"") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000000000000000000001000000000001000000000000000200000000000000000000000000020400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000000000000000000000100000000000000000000000000010000000000000000000000000001040000000000000001610300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "" "\"addr_test1qqjwq357\"") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000000000000000000010000000000010000000000000002000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000000000000000000010400000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "" "\"addr_test1vpssccjchz\"") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000000000000000000010000000000010000000000000002000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000016100000000000100000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "" "\"addr_test1vqylkdml\"") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000000000000000000000100000000000100000000000000020000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "" "\"addr_test1wpssnqh9pc\"") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000000000000000000010000000000010000000000000002000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000100000000000000010400000000000000016100000000000100000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "" "\"addr_test1wq6vgsdn\"") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000000000000000000000100000000000100000000000000020000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000001000000000000000104000000000000000000000000000100000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "" "\"addr_test1ypssarxha3\"") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000000000000000000001000000000001000000000000000200000000000000000000000000020400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000000000000000000000100000000000000000000000000010000000000010000000000000001040000000000000001610300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "" "\"addr_test1yq8p4z3x\"") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000000000000000000010000000000010000000000000002000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000100000000000000010400000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "" "a") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000000000000000000001000000000001000000000000000200000000000000000000000000020400000000000000000000000000010000000000000001040000000000000001610300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IChoice (ChoiceId "a" "\"addr_test1vqylkdml\"") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000100000000000000000000000000010000000000010000000000000002000000000000000000000000000204000000000000000161000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "" "\"addr_test1vqylkdml\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000000000000000000001000000000000000000000000000400000000000100000000000000010400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr1vy5ecqvg\"" "\"addr_test1vqylkdml\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1qpsst6vycv\"" "\"addr_test1vqylkdml\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1qqjwq357\"" "\"addr_test1vqylkdml\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000000000000000000001000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000000000000000000010400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vpssccjchz\"" "\"addr_test1vqylkdml\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000010000000000000000000000000001000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000001000000000000000104000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr1vy5ecqvg\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1qpsst6vycv\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1qqjwq357\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vpssccjchz\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "a") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "61" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1wpssnqh9pc\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1wq6vgsdn\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1ypssarxha3\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "\"addr_test1yq8p4z3x\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1vqylkdml\"" "a" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000000000000000000000100000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000100000000000000010400000000000000016100000000000000000000000000020400000000000000000400000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1wpssnqh9pc\"" "\"addr_test1vqylkdml\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1wq6vgsdn\"" "\"addr_test1vqylkdml\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1ypssarxha3\"" "\"addr_test1vqylkdml\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "\"addr_test1yq8p4z3x\"" "\"addr_test1vqylkdml\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput (IDeposit "a" "\"addr_test1vqylkdml\"" (Token "" "") 1)], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000000000000000000000100000000000000000000000000040000000000010000000000000001040000000000000001610000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000300000000010000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [NormalInput INotify], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000001000000000000000000000000000100000000000200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [(TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}},Payout {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList [(AssetId {policyId = "", tokenName = ""},Quantity {unQuantity = 1})]}}}, datum = AssetId {policyId = "", tokenName = ""}})], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000010000000000000000000100000000000000000000000001000000000000000100000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [(TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}},Payout {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList [(AssetId {policyId = "", tokenName = "a"},Quantity {unQuantity = 1})]}}}, datum = AssetId {policyId = "", tokenName = ""}})], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000001000000000000000000010000000000000000000000000100000000000000010000000000000000000000000000000161000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [(TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}},Payout {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList [(AssetId {policyId = "61", tokenName = ""},Quantity {unQuantity = 1})]}}}, datum = AssetId {policyId = "", tokenName = ""}})], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000001000000000000000000010000000000000000000000000100000000000000010000000000000001610000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [(TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}},Payout {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, datum = AssetId {policyId = "", tokenName = ""}})], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000010000000000000000000100000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [(TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}},Payout {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, datum = AssetId {policyId = "", tokenName = "a"}})], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000001000000000000000000010000000000000000000000000100000000000000000000000000000000000000000000000161000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [(TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}},Payout {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, datum = AssetId {policyId = "61", tokenName = ""}})], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000001000000000000000000010000000000000000000000000100000000000000000000000000000001610000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [(TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}},Payout {address = "61", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, datum = AssetId {policyId = "", tokenName = ""}})], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000001000000000000000000010000000000000001610000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [(TxOutRef {txId = "61", txIx = TxIx {unTxIx = 1}},Payout {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, datum = AssetId {policyId = "", tokenName = ""}})], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000001000000000000000161000100000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList [(AssetId {policyId = "", tokenName = ""},Quantity {unQuantity = 1})]}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000010000000000000000000000000000000000000000010000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList [(AssetId {policyId = "", tokenName = "a"},Quantity {unQuantity = 1})]}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000001000000000000000000000000000000016100000000010000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList [(AssetId {policyId = "61", tokenName = ""},Quantity {unQuantity = 1})]}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000001000000000000000161000000000000000000000000010000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = 61}, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000161000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr1vy5ecqvg\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1qpsst6vycv\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1qqjwq357\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1vpssccjchz\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000100000000000000000000000000020000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000001610000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000003000000000101000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1vqylkdml\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1vqylkdml\"",Token "" "a"),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000100000000000000000000000000020000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000016103000000000101000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1vqylkdml\"",Token "61" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1wpssnqh9pc\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1wq6vgsdn\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1ypssarxha3\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("\"addr_test1yq8p4z3x\"",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = [(("a",Token "" ""),1)]}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000010000000000000000000000000002040000000000000000000000000001000000000000000104000000000000000003000000000101000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr1vy5ecqvg\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1qpsst6vycv\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1qqjwq357\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1vpssccjchz\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1vqylkdml\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1wpssnqh9pc\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1wq6vgsdn\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1ypssarxha3\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "\"addr_test1yq8p4z3x\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000001000000000000000104000000000000000003000000000101000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "" "a",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000001000000000000000000000000000204000000000000000000000000000100000000000000010400000000000000016103000000000101000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = [(ChoiceId "a" "\"addr_test1vqylkdml\"",1)]}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = [("",1)]}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000001000000000000000000000000000104000000000000000003000000000103000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = [("a",1)]}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000100000000000000000000000000010400000000000000016103000000000103000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (AndObs FalseObs FalseObs) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000050000000000000002000000000000000000000000000200000000000a000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000500000000000000020000000000030000000000000001000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000100000000000000010400000000000000016100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "" "a")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (NotObs FalseObs) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000050000000000000002000000000002000000000000000100000000000a000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (OrObs FalseObs FalseObs) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000050000000000000002000000000001000000000000000200000000000a000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ValueEQ TimeIntervalStart TimeIntervalStart) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000005000000000000000200000000000800000000000000020000000000080000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ValueGE TimeIntervalStart TimeIntervalStart) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000005000000000000000200000000000400000000000000020000000000080000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ValueGT TimeIntervalStart TimeIntervalStart) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000005000000000000000200000000000500000000000000020000000000080000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ValueLE TimeIntervalStart TimeIntervalStart) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000005000000000000000200000000000700000000000000020000000000080000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert (ValueLT TimeIntervalStart TimeIntervalStart) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000005000000000000000200000000000600000000000000020000000000080000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert FalseObs Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000005000000000000000200000000000a000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Assert TrueObs Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000050000000000000002000000000009000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (AndObs FalseObs FalseObs) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000000000000000000000200000000000a000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\"")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\"")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\"")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000200000000000000030000000000030000000000000001000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000100000000000000010400000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "" "a")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (NotObs FalseObs) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000002000000000000000100000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (OrObs FalseObs FalseObs) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000001000000000000000200000000000a000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ValueEQ TimeIntervalStart TimeIntervalStart) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000008000000000000000200000000000800000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ValueGE TimeIntervalStart TimeIntervalStart) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000004000000000000000200000000000800000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ValueGT TimeIntervalStart TimeIntervalStart) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000005000000000000000200000000000800000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ValueLE TimeIntervalStart TimeIntervalStart) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000007000000000000000200000000000800000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If (ValueLT TimeIntervalStart TimeIntervalStart) Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000020000000000000003000000000006000000000000000200000000000800000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If FalseObs Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000002000000000000000300000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = If TrueObs Close Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000200000000000000030000000000090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AddValue (Constant 1) (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (AvailableMoney "a" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000040000000000000003000000000000000000000000000104000000000000000000000000000700000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000000000000000000000104000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "" "a")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000004000000000000000300000000000000000000000000010400000000000000000000000000070000000000000001000000000000000000000000000204000000000000000000000000000100000000000000010400000000000000016100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (Cond FalseObs (Constant 1) (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000040000000000000003000000000000000000000000000104000000000000000000000000000b000000000000000300000000000a00000000000000000000000000010000000000000001030000000001000000000001000000000000000103000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (Constant 1) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000400000000000000030000000000000000000000000001040000000000000000000000000001000000000000000103000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (DivValue (Constant 1) (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (MulValue (Constant 1) (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (NegValue (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (SubValue (Constant 1) (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (UseValue "") Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000040000000000000003000000000000000000000000000104000000000000000000000000000a0000000000000001000000000000000000000000000104000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" (UseValue "a") Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000040000000000000003000000000000000000000000000104000000000000000000000000000a000000000000000100000000000000000000000000010400000000000000016100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" TimeIntervalEnd Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000400000000000000030000000000000000000000000001040000000000000000000000000009000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "" TimeIntervalStart Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000400000000000000030000000000000000000000000001040000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Let "a" (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr1vy5ecqvg\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000010000000000000005000000000000000000000000000200000000000100000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000001000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1qpsst6vycv\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1qqjwq357\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vpssccjchz\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr1vy5ecqvg\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1qpsst6vycv\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1qqjwq357\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vpssccjchz\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AddValue (Constant 1) (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000010000000000000005000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000001000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000010000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "a" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000100000000000000050000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000010000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000070000000000000001000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000100000000000000010400000000000000016100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "" "a")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\"")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (Cond FalseObs (Constant 1) (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4eb000000000000000300000000000a00000000000000000000000000010000000000000001030000000001000000000001000000000000000103000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (Constant 1) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (DivValue (Constant 1) (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (MulValue (Constant 1) (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (NegValue (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (SubValue (Constant 1) (Constant 1)) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (UseValue "") Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea0000000000000001000000000000000000000000000104000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (UseValue "a") Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000100000000000000000000000000010400000000000000016100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") TimeIntervalEnd Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") TimeIntervalStart Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "" "a") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1vqylkdml\"") (Token "61" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1wpssnqh9pc\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1wq6vgsdn\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1ypssarxha3\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "\"addr_test1yq8p4z3x\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000001000000000000000500000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000100000000000000010400000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Account "a") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr1vy5ecqvg\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1qpsst6vycv\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1qqjwq357\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1vpssccjchz\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1wpssnqh9pc\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1wq6vgsdn\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1ypssarxha3\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "\"addr_test1yq8p4z3x\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1vqylkdml\"" (Party "a") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1wpssnqh9pc\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1wq6vgsdn\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1ypssarxha3\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "\"addr_test1yq8p4z3x\"" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Pay "a" (Account "\"addr_test1vqylkdml\"") (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "")) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000001000000000000000200000000000000000000000000020400000000000000000000000000010000000000000001040000000000000000020000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr1vy5ecqvg\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1qpsst6vycv\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1qqjwq357\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000001000000000000000200000000000000000000000000020400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000000000000000000000100000000000000000000000000010000000000000000000000000001040000000000000000020000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1vpssccjchz\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") [Bound 1 1]) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000000000000000000020000000000010000000000000002000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000020000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1wpssnqh9pc\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1wq6vgsdn\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1ypssarxha3\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "\"addr_test1yq8p4z3x\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "" "a") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000000000000000000000200000000000100000000000000020000000000000000000000000002040000000000000000000000000001000000000000000104000000000000000161020000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Choice (ChoiceId "a" "\"addr_test1vqylkdml\"") []) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr1vy5ecqvg\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1qpsst6vycv\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1qqjwq357\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vpssccjchz\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr1vy5ecqvg\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qpsst6vycv\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qqjwq357\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vpssccjchz\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AddValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000016100000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a"))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "a" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000000000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000700000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000000000000000000000104000000000000000161000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000000000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000700000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000001000000000000000104000000000000000161000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000007000000000000000100000000000000000000000000020400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000000000000000000000100000000000000000000000000010000000000010000000000000001040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "a"))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Cond FalseObs (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4eb000000000000000300000000000a000000000000000000000000000100000000000000010300000000010000000000010000000000000001030000000001000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Constant 1)) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (DivValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (MulValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (NegValue (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (SubValue (Constant 1) (Constant 1))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "")) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea00000000000000010000000000000000000000000001040000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "a")) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea0000000000000001000000000000000000000000000104000000000000000161000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalEnd) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalStart) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000000000000000000020000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000080000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "a") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "61" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wpssnqh9pc\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wq6vgsdn\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1ypssarxha3\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1yq8p4z3x\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1vqylkdml\"" "a" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1wpssnqh9pc\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1wq6vgsdn\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1ypssarxha3\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "\"addr_test1yq8p4z3x\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Deposit "a" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (AndObs FalseObs FalseObs)) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000000000000000000020000000000020000000000000001000000000000000000000000000200000000000a000000000000000000000000000a0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" ""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000000000000000000020000000000020000000000000001000000000003000000000000000100000000000000000000000000020400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000001610000000000010000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000002000000000000000100000000000300000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000001000000000000000104000000000000000161000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "" "a"))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\""))) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (NotObs FalseObs)) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000000000000000000020000000000020000000000000001000000000002000000000000000100000000000a0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (OrObs FalseObs FalseObs)) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000000000000000000020000000000020000000000000001000000000001000000000000000200000000000a000000000000000000000000000a0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ValueEQ TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ValueGE TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ValueGT TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ValueLE TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify (ValueLT TimeIntervalStart TimeIntervalStart)) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify FalseObs) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000000000000000000002000000000002000000000000000100000000000a0000000000000000000000000000000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [Case (Notify TrueObs) Close] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr1vy5ecqvg\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1qpsst6vycv\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1qqjwq357\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1vpssccjchz\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") [Bound 1 1]) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1vqylkdml\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1wpssnqh9pc\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1wq6vgsdn\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1ypssarxha3\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "\"addr_test1yq8p4z3x\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "" "a") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000010000000000000002000000000000000000000000000204000000000000000000000000000100000000000000010400000000000000016102000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Choice (ChoiceId "a" "\"addr_test1vqylkdml\"") []) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr1vy5ecqvg\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1qpsst6vycv\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1qqjwq357\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vpssccjchz\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr1vy5ecqvg\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qpsst6vycv\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1qqjwq357\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000001000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000000000000000000010400000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vpssccjchz\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AddValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr1vy5ecqvg\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qpsst6vycv\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1qqjwq357\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vpssccjchz\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) "a"] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" "a"))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "61" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wpssnqh9pc\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1wq6vgsdn\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1ypssarxha3\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000000000000000000002000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000001000000000000000104000000000000000161000000000000000000000000000204000000000000000004000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1yq8p4z3x\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "a" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr1vy5ecqvg\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qpsst6vycv\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1qqjwq357\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000001000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000700000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000000000000000000000104000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vpssccjchz\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1wq6vgsdn\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000010000000000000002000000000000000000000000000400000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000007000000000000000100000000000000000000000000020400000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000010000000000000001040000000000000000000000000001000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1ypssarxha3\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000070000000000000001000000000000000000000000000204000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000000000000000000001000000000000000000000000000100000000000100000000000000010400000000000000016104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "\"addr_test1yq8p4z3x\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000001000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000000000000000700000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000001000000000000000104000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "" "a"))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000000000000000000004000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000001000000000000000000000000000000000000000000020400000000000000000400000000000000000000000000070000000000000001000000000000000000000000000204000000000000000000000000000100000000000000010400000000000000016104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (ChoiceValue (ChoiceId "a" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Cond FalseObs (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4eb000000000000000300000000000a00000000000000000000000000010000000000000001030000000001000000000001000000000000000103000000000104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (Constant 1)) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (DivValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (MulValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (NegValue (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (SubValue (Constant 1) (Constant 1))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "")) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea0000000000000001000000000000000000000000000104000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") (UseValue "a")) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4ea000000000000000100000000000000000000000000010400000000000000016104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalEnd) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "") TimeIntervalStart) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "" "a") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1vqylkdml\"" (Token "61" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wpssnqh9pc\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1wq6vgsdn\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1ypssarxha3\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "\"addr_test1yq8p4z3x\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1vqylkdml\"" "a" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1wpssnqh9pc\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000001000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000010000000000000001040000000000000001610000000000010000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1wq6vgsdn\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1ypssarxha3\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "\"addr_test1yq8p4z3x\"" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000001000000000000000200000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000020000000000000000000000000001040000000000000000000000000000000000000000000100000000000000000000000000010000000000010000000000000001040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000100000000000000000000000000000000000000000002040000000000000000040000000000000000000000000000000000000000000200000000000000000000000000020000000000000000000000000000000000000000000000000000000200000000000000000000000000010400000000000000000000000000010000000000000000000000000000000000000000000204000000000000000004000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Deposit "a" "\"addr_test1vqylkdml\"" (Token "" "") (AvailableMoney "\"addr_test1vqylkdml\"" (Token "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (AndObs FalseObs FalseObs)) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000020000000000000001000000000000000000000000000200000000000a000000000000000000000000000a000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" ""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000010000000000000002000000000002000000000000000100000000000300000000000000010000000000000000000000000002040000000000000000000000000001000000000000000104000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr1vy5ecqvg\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qpsst6vycv\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1qqjwq357\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000010000000000000002000000000002000000000000000100000000000300000000000000010000000000000000000000000002040000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000002000000000000000000000000000104000000000000000000000000000000000000000000010000000000000000000000000001000000000000000000000000000104000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vpssccjchz\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wpssnqh9pc\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1wq6vgsdn\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1ypssarxha3\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "\"addr_test1yq8p4z3x\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "" "a"))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000010000000000000000000000000003000000000000000000000000000104000000000000000000000000000000000000000000040100000000000000000100000000000000000100000000000000000300000000010000000000030000000000000003020000000000000001000000000001000000000000000200000000000200000000000000010000000000030000000000000001000000000000000000000000000204000000000000000000000000000100000000000000010400000000000000016104000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ChoseSomething (ChoiceId "a" "\"addr_test1vqylkdml\""))) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (NotObs FalseObs)) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000020000000000000001000000000002000000000000000100000000000a000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (OrObs FalseObs FalseObs)) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000100000000000100000000000000020000000000020000000000000001000000000001000000000000000200000000000a000000000000000000000000000a000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ValueEQ TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ValueGE TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ValueGT TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ValueLE TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify (ValueLT TimeIntervalStart TimeIntervalStart)) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify FalseObs) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000300000000000000030200000000000000010000000000010000000000000002000000000002000000000000000100000000000a000000000000000004000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [MerkleizedCase (Notify TrueObs) ""] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = When [] (POSIXTime {getPOSIXTime = 1}) Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e802000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000001000000000000000000000000000300000000000000000000000000010400000000000000000000000000000000000000000004010000000000000000010000000000000000010000000000000000030000000001000000000003000000000000000302000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "61", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000161000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Just (TransactionScriptOutput {address = "61", assets = TxOutAssets {unTxOutAssets = Assets {ada = Lovelace {unLovelace = 1}, tokens = Tokens {unTokens = fromList []}}}, utxo = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, datum = MarloweData {marloweParams = MarloweParams {rolesCurrency = }, marloweState = State {accounts = Map {unMap = []}, choices = Map {unMap = []}, boundValues = Map {unMap = []}, minTime = POSIXTime {getPOSIXTime = 1}}, marloweContract = Close}})}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e8020000000000000000000000000000000001000000000000000161000000000100000000000000000000000000000000000100000000000000000000000000030000000000000000000000000001040000000000000000000000000000000000000000000401000000000000000001000000000000000001000000000000000003000000000100000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000100000001000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "61", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000000000000000000010000000100000001000000000000000000010000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001000000000000000161000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "61", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000000000000000000010000000100000001000000000000000000010000000000000000000000000000000000000000000000000000000000000001610001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "61", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000000000000000000010000000100000001000000000000000000010000000000000000000000000000000000000000000000016100000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = "61"}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000000000000000000010000000100000001000000000000000000010000000000000000000000000000000161000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}, marloweAddress = "61", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000000000000000000010000000100000001000000000000000000010000000000000001610000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [MarloweApplyInputsTransaction MarloweV1 (UnspentContractOutput {marloweVersion = SomeMarloweVersion MarloweV1, txOutRef = TxOutRef {txId = "61", txIx = TxIx {unTxIx = 1}}, marloweAddress = "", payoutValidatorHash = ""}) (Transaction {transactionId = "", contractId = ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}}, metadata = MarloweTransactionMetadata {marloweMetadata = Nothing, transactionMetadata = TransactionMetadata {unTransactionMetadata = fromList []}}, blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, validityLowerBound = 2000-01-01 00:00:01 UTC, validityUpperBound = 2000-01-01 00:00:01 UTC, inputs = [], output = TransactionOutput {payouts = fromList [], scriptOutput = Nothing}})], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000000000000000000010000000100000001000000000000000161000100000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000007d00000000000000001010100000000000000050010a5d4e800000007d00000000000000001010100000000000000050010a5d4e80200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [], withdrawTransactions = [MarloweWithdrawTransaction {consumedPayouts = fromList [(ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}},fromList [TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}])], consumingTx = ""}]}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000001000000000000000000010000000000000001000000000000000000010000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [], withdrawTransactions = [MarloweWithdrawTransaction {consumedPayouts = fromList [(ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}},fromList [TxOutRef {txId = "61", txIx = TxIx {unTxIx = 1}}])], consumingTx = ""}]}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000100000000000000000001000000000000000100000000000000016100010000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [], withdrawTransactions = [MarloweWithdrawTransaction {consumedPayouts = fromList [(ContractId {unContractId = TxOutRef {txId = "", txIx = TxIx {unTxIx = 1}}},fromList [])], consumingTx = ""}]}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000000000000000000000100000000000000010000000000000000000100000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [], withdrawTransactions = [MarloweWithdrawTransaction {consumedPayouts = fromList [(ContractId {unContractId = TxOutRef {txId = "61", txIx = TxIx {unTxIx = 1}}},fromList [])], consumingTx = ""}]}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000001000000000000000161000100000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [], withdrawTransactions = [MarloweWithdrawTransaction {consumedPayouts = fromList [], consumingTx = ""}]}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000000000000000000000100000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [], withdrawTransactions = [MarloweWithdrawTransaction {consumedPayouts = fromList [], consumingTx = "61"}]}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 0400000000000000010000000000000001000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000000000000000000000161000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000001000000000000000100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [MarloweBlock {blockHeader = BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "61", blockNo = BlockNo {unBlockNo = 1}}, createTransactions = [], applyInputsTransactions = [], withdrawTransactions = []}] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000100000000000000010000000000000001610000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "", blockNo = BlockNo {unBlockNo = 1}})
Binary: 040000000000000000000000000000000100000000000000000000000000000001
Show: MsgRollForward [] (BlockHeader {slotNo = SlotNo {unSlotNo = 1}, headerHash = "61", blockNo = BlockNo {unBlockNo = 1}})
Binary: 04000000000000000000000000000000010000000000000001610000000000000001
Show: MsgWait
Binary: 06
